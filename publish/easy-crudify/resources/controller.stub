<?php

namespace DummyNamespace;

use DummyRootNamespaceHttp\Requests;
use DummyRootNamespaceHttp\Controllers\Controller;

use DummyRootNamespace{{modelNamespace}}{{modelName}};
use Illuminate\Http\Request;

class DummyClass extends Controller
{
    public function index(Request $request)
    {
        $keyword = $request->get('search');

        ${{crudName}} = {{modelName}}::{{whereSnippet}}latest()->paginate();

        return view('{{viewPath}}{{viewName}}.index', compact('{{crudName}}'));
    }

    public function create()
    {
        return view('{{viewPath}}{{viewName}}.create');
    }

    public function store(Request $request)
    {
        {{validationRules}}
        $requestData = $request->all();
        {{fileSnippet}}
        {{modelName}}::create($requestData);
        return redirect()->route('{{viewName}}.index')->with('flash_message', '{{modelName}} added!');
    }

    public function show($id)
    {
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);
        return view('{{viewPath}}{{viewName}}.show', compact('{{crudNameSingular}}'));
    }

    public function edit($id)
    {
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);
        return view('{{viewPath}}{{viewName}}.edit', compact('{{crudNameSingular}}'));
    }

    public function update(Request $request, $id)
    {
        {{validationRules}}
        $requestData = $request->all();
        {{fileSnippet}}
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);
        ${{crudNameSingular}}->update($requestData);

        return redirect()->route('{{viewName}}.index')->with('flash_message', '{{modelName}} updated!');
    }

    public function destroy($id)
    {
        {{modelName}}::destroy($id);
        return redirect()->route('{{viewName}}.index')->with('flash_message', '{{modelName}} deleted!');
    }
}
